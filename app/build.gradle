buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/"}
        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "gradle.plugin.org.golang.mobile.bind:gobindPlugin:0.2.8"
        classpath 'me.tatarka:gradle-retrolambda:3.6.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
//apply plugin: "org.golang.mobile.bind"


repositories {
    maven { url 'https://maven.fabric.io/public' }
}
//
//gobind {
//    //pkg = "golang.org/x/mobile/example/bind/hello"
//    //pkg = "github.com/gogotattoo/gogo-upload/watermark"
//    //pkg = "github.com/skip2/go-qrcode"
//
//    GOPATH = "/Users/delirium/go"
//
//    // Optional path to the go executable.
//     GO = "/Users/delirium/go/bin/go"
//
//    // Optionally, set the absolute path to the gomobile binary.
//    GOMOBILE = "/Users/delirium/go/bin/gomobile"
//
//    // Pass extra parameters to command line. Optional.
//    // GOMOBILEFLAGS="-javapkg my.java.package"
//
//    // Absolute path to the gobind binary. Optional.
//    GOBIND="/Users/delirium/go/bin/gobind"
//
//    // Optional list of architectures. Defaults to all supported architectures.
//    // GOARCH="arm amd64"
//}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "tattoo.gogo.app.gogo_android"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 3
        versionName "0.0.3-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.github.kenglxn.QRGen:android:2.2.0'
    compile 'com.jakewharton:butterknife:8.5.1'
    compile 'com.github.mabbas007:TagsEditText:v1.0.4'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.okhttp3:okhttp:3.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
//    compile 'com.squareup.picasso:picasso:2.5.2'
    //compile 'com.squareup.okhttp:okhttp:2.4.0'
    //compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-analytics:10.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.6@aar') {
        transitive = true;
    }
    compile 'me.dm7.barcodescanner:zxing:1.9'
//    compile(name:'watermark', ext:'aar')

//    compile(name:'watermark', ext:'aar')

}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

apply plugin: 'com.google.gms.google-services'